// Package client
// @file:client.go
// @version:v0.0.2
// Code generated by goctl-resty-client. DO NOT EDIT.
package client

import (
	"context"
	"github.com/mengdj/goctl-rest-client/conf"
	"github.com/mengdj/goctl-rest-client/factory"
	"github.com/mengdj/goctl-rest-client/factory/rest"
)

// begin
//
//go:generate fieldalignment -fix client.go
type (
	Response struct {
		Code uint32 `json:"code"`
		Msg  string `json:"msg"`
	}

	HelloRequest struct {
		ID uint64 `json:"id,optional" path:"id"` //系统方案ID
	}

	// Client
	Client interface {

		// Hello
		Hello(context.Context, *HelloRequest) (*Response, error)
		Invoke(context.Context, string, string, interface{}, interface{}) error
	}
	clientFactory struct {
		factory.Client
	}
)

//end

// MustClient
func MustClient(c conf.DiscoverClientConf, opts ...rest.RestOption) Client {
	return &clientFactory{
		Client: factory.NewRestDiscoverClient("exa_api", c, opts...),
	}
}

func (cf *clientFactory) Invoke(ctx context.Context, method string, path string, entity interface{}, resp interface{}) error {
	return cf.Client.Invoke(ctx, method, path, entity, resp)
}

// Hello
func (cf *clientFactory) Hello(ctx context.Context, entity *HelloRequest) (resp *Response, err error) {
	resp = new(Response)
	err = cf.Invoke(ctx, "get", "/api/v1/app/test/hello/:id", entity, resp)
	if nil != err {
		return nil, err
	}
	return resp, nil
}
